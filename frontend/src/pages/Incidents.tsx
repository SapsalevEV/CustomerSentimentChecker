import { AppLayout } from "@/components/layout/AppLayout";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { CheckCircle, Clock, Users, Smartphone, Monitor, Tablet } from "lucide-react";

const incidentData = {
  id: "INC-2024-001",
  title: "–°–±–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –±–∞–Ω–∫–∏–Ω–≥–∞",
  status: "critical",
  timeOpened: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥",
  affectedFunctions: { mobile: 85, web: 12, atm: 3 },
  geography: ["–ú–æ—Å–∫–≤–∞", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"],
  devices: { mobile: 78, tablet: 15, desktop: 7 }
};

const timeline = [
  { time: "14:23", event: "–ü–æ–ª—É—á–µ–Ω—ã –ø–µ—Ä–≤—ã–µ –∂–∞–ª–æ–±—ã", type: "start" },
  { time: "14:45", event: "–ü–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - 50+ –∂–∞–ª–æ–±/–º–∏–Ω", type: "peak" },
  { time: "15:12", event: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤", type: "action" },
  { time: "15:30", event: "–í—ã—è–≤–ª–µ–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞", type: "progress" },
  { time: "16:00", event: "–ü–∞—Ç—á —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥–µ", type: "progress" },
];

const recommendedActions = [
  { action: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º", completed: true, template: true },
  { action: "–≠—Å–∫–∞–ª–∏—Ä–æ–≤–∞—Ç—å –∫ —Å—Ç–∞—Ä—à–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º", completed: true, template: false },
  { action: "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—É–±–ª–∏—á–Ω–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ", completed: false, template: true },
  { action: "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É –ø–æ —Ä–∞–∑–±–æ—Ä—É –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞", completed: false, template: false },
  { action: "–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç Jira –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è", completed: false, template: false }
];

export default function Incidents() {
  return (
    <AppLayout>
      <div className="space-y-6">
        {/* Header */}
        <div className="flex items-center justify-between">
          <div>
            <div className="flex items-center gap-3 mb-2">
              <h1 className="text-3xl font-bold text-foreground">–ö–∞—Ä—Ç–æ—á–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞</h1>
              <Badge className="bg-critical text-white">üî¥ CRITICAL</Badge>
              <span className="text-muted-foreground">#{incidentData.id}</span>
            </div>
            <p className="text-muted-foreground">–û—Ç–∫—Ä—ã—Ç {incidentData.timeOpened}</p>
          </div>
          <div className="flex items-center gap-3">
            <Button variant="outline">–ù–∞–∑–Ω–∞—á–∏—Ç—å</Button>
            <Button variant="outline">–≠—Å–∫–∞–ª–∏—Ä–æ–≤–∞—Ç—å</Button>
            <Button>–ó–∞–∫—Ä—ã—Ç—å –∫–∞–∫ —Ä–µ—à–µ–Ω–Ω—ã–π</Button>
          </div>
        </div>

        {/* Development Timeline */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Clock className="w-5 h-5" />
              –•—Ä–æ–Ω–æ–ª–æ–≥–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–±—ã—Ç–∏–π
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {timeline.map((event, index) => (
                <div key={index} className="flex items-center gap-4">
                  <div className="w-16 text-sm font-mono text-muted-foreground">
                    {event.time}
                  </div>
                  <div className="w-2 h-2 rounded-full bg-primary"></div>
                  <div className="flex-1">
                    <span className="text-sm">{event.event}</span>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Problem Analysis */}
          <Card>
            <CardHeader>
              <CardTitle>–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã (—Å –ø–æ–º–æ—â—å—é –ò–ò)</CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div>
                <h4 className="font-medium mb-2">–ó–∞—Ç—Ä–æ–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</h4>
                <div className="space-y-2">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      <Smartphone className="w-4 h-4" />
                      <span>–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</span>
                    </div>
                    <span className="font-mono">{incidentData.affectedFunctions.mobile}%</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      <Monitor className="w-4 h-4" />
                      <span>–í–µ–±-–ø–æ—Ä—Ç–∞–ª</span>
                    </div>
                    <span className="font-mono">{incidentData.affectedFunctions.web}%</span>
                  </div>
                </div>
              </div>
              
              <div>
                <h4 className="font-medium mb-2">–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ</h4>
                <div className="flex flex-wrap gap-2">
                  {incidentData.geography.map((location) => (
                    <Badge key={location} variant="secondary">{location}</Badge>
                  ))}
                </div>
              </div>

              <div>
                <h4 className="font-medium mb-2">–¢–∏–ø—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤</h4>
                <div className="space-y-2">
                  <div className="flex items-center justify-between">
                    <span>–ú–æ–±–∏–ª—å–Ω—ã–µ</span>
                    <span className="font-mono">{incidentData.devices.mobile}%</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span>–ü–ª–∞–Ω—à–µ—Ç—ã</span>
                    <span className="font-mono">{incidentData.devices.tablet}%</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span>–î–µ—Å–∫—Ç–æ–ø—ã</span>
                    <span className="font-mono">{incidentData.devices.desktop}%</span>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Recommended Actions */}
          <Card>
            <CardHeader>
              <CardTitle>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {recommendedActions.map((item, index) => (
                  <div key={index} className="flex items-center gap-3 p-3 rounded-lg border">
                    <CheckCircle 
                      className={`w-5 h-5 ${item.completed ? 'text-sentiment-positive' : 'text-muted-foreground'}`}
                    />
                    <div className="flex-1">
                      <span className={item.completed ? 'line-through text-muted-foreground' : ''}>
                        {item.action}
                      </span>
                    </div>
                    {!item.completed && (
                      <div className="flex gap-2">
                        {item.template && (
                          <Button size="sm" variant="outline">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω</Button>
                        )}
                        <Button size="sm">–í—ã–ø–æ–ª–Ω–∏—Ç—å</Button>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </AppLayout>
  );
}