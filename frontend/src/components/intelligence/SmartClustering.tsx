import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { Brain, TrendingUp, AlertTriangle, Users, ArrowRight } from "lucide-react";

interface TopicCluster {
  id: string;
  name: string;
  keywords: string[];
  sentiment: number;
  volume: number;
  growth: number;
  confidence: number;
  examples: string[];
  impact: "high" | "medium" | "low";
  actionable: boolean;
}

const mockClusters: TopicCluster[] = [
  {
    id: "cluster-1",
    name: "–ü—Ä–æ–±–ª–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
    keywords: ["–ª–æ–≥–∏–Ω", "–ø–∞—Ä–æ–ª—å", "–≤—Ö–æ–¥", "–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω", "SMS", "–∫–æ–¥"],
    sentiment: 32,
    volume: 847,
    growth: 45,
    confidence: 92,
    examples: [
      "–ù–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –°–ú–° —Å –∫–æ–¥–æ–º –¥–ª—è –≤—Ö–æ–¥–∞",
      "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–æ –∞–∫–∫–∞—É–Ω—Ç –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã", 
      "–ü–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å –∑–∞–Ω–æ–≤–æ"
    ],
    impact: "high",
    actionable: true
  },
  {
    id: "cluster-2", 
    name: "–ú–µ–¥–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã",
    keywords: ["–ø–µ—Ä–µ–≤–æ–¥", "—Å–∫–æ—Ä–æ—Å—Ç—å", "–¥–æ–ª–≥–æ", "–æ–∂–∏–¥–∞–Ω–∏–µ", "–æ–±—Ä–∞–±–æ—Ç–∫–∞"],
    sentiment: 41,
    volume: 623,
    growth: 23,
    confidence: 87,
    examples: [
      "–ü–µ—Ä–µ–≤–æ–¥ –º–µ–∂–¥—É –∫–∞—Ä—Ç–∞–º–∏ –∏–¥–µ—Ç –æ—á–µ–Ω—å –¥–æ–ª–≥–æ",
      "–î–µ–Ω—å–≥–∏ –∑–∞–≤–∏—Å–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –Ω–∞ 2 –¥–Ω—è",
      "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–µ–¥–µ–ª—é"
    ],
    impact: "medium",
    actionable: true
  },
  {
    id: "cluster-3",
    name: "UI/UX –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
    keywords: ["–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å", "–¥–∏–∑–∞–π–Ω", "–Ω–µ—É–¥–æ–±–Ω–æ", "—Å–ª–æ–∂–Ω–æ", "–∑–∞–ø—É—Ç–∞–Ω–Ω–æ"],
    sentiment: 54,
    volume: 456,
    growth: 12,
    confidence: 78,
    examples: [
      "–ù–æ–≤—ã–π –¥–∏–∑–∞–π–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ—á–µ–Ω—å –∑–∞–ø—É—Ç–∞–Ω–Ω—ã–π",
      "–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã —É—Å–ª—É–≥",
      "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–ª–∏–∫–æ–≤ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π"
    ],
    impact: "medium", 
    actionable: true
  },
  {
    id: "cluster-4",
    name: "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –æ –∫—ç—à–±—ç–∫–µ",
    keywords: ["–∫—ç—à–±—ç–∫", "–≤–æ–∑–≤—Ä–∞—Ç", "–±–æ–Ω—É—Å—ã", "–≤—ã–≥–æ–¥–Ω–æ", "–æ—Ç–ª–∏—á–Ω–æ"],
    sentiment: 84,
    volume: 312,
    growth: -8,
    confidence: 91,
    examples: [
      "–ö—ç—à–±—ç–∫ –ø–æ –∫–∞—Ä—Ç–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ",
      "–ü–æ–ª—É—á–∏–ª —Ö–æ—Ä–æ—à–∏–π –≤–æ–∑–≤—Ä–∞—Ç –∑–∞ –ø–æ–∫—É–ø–∫–∏",
      "–ë–æ–Ω—É—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ—á–µ–Ω—å –≤—ã–≥–æ–¥–Ω–∞—è"
    ],
    impact: "low",
    actionable: false
  },
  {
    id: "cluster-5",
    name: "Emerging: –ü—Ä–æ–±–ª–µ–º—ã —Å QR-–ø–ª–∞—Ç–µ–∂–∞–º–∏",
    keywords: ["QR", "—Å–∫–∞–Ω–µ—Ä", "–æ–ø–ª–∞—Ç–∞", "–∫–æ–¥", "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"],
    sentiment: 28,
    volume: 89,
    growth: 156,
    confidence: 65,
    examples: [
      "QR-–∫–æ–¥ –Ω–µ —Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω–∞—Ö",
      "–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ QR –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–∞–¥–∞–µ—Ç",
      "–°–∫–∞–Ω–µ—Ä –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    ],
    impact: "high",
    actionable: true
  }
];

export function SmartClustering() {
  const getSentimentColor = (score: number) => {
    if (score >= 70) return 'text-sentiment-positive';
    if (score >= 50) return 'text-orange-600'; 
    return 'text-sentiment-negative';
  };

  const getImpactBadgeColor = (impact: string) => {
    switch (impact) {
      case 'high': return 'destructive';
      case 'medium': return 'default';
      case 'low': return 'secondary';
      default: return 'secondary';
    }
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Brain className="w-5 h-5 text-primary" />
          Smart Clustering (ML-based)
          <Badge variant="outline" className="bg-gradient-to-r from-primary/10 to-accent/10">
            AI Powered
          </Badge>
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {mockClusters.map((cluster) => (
            <div key={cluster.id} className={`border rounded-lg p-4 ${
              cluster.name.includes('Emerging') ? 'border-orange-300 bg-orange-50/50' : 
              cluster.actionable ? 'border-red-200 bg-red-50/30' : 'border-green-200 bg-green-50/30'
            }`}>
              <div className="flex items-start justify-between mb-3">
                <div className="flex-1">
                  <div className="flex items-center gap-3 mb-2">
                    <h4 className="font-semibold text-foreground">
                      {cluster.name}
                      {cluster.name.includes('Emerging') && (
                        <Badge variant="outline" className="ml-2 text-orange-600 border-orange-300">
                          üö® –ù–æ–≤–∞—è –ø—Ä–æ–±–ª–µ–º–∞
                        </Badge>
                      )}
                    </h4>
                    <Badge variant={getImpactBadgeColor(cluster.impact)}>
                      {cluster.impact} impact
                    </Badge>
                  </div>
                  
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-3 text-sm">
                    <div>
                      <span className="text-muted-foreground">Sentiment:</span>
                      <p className={`font-medium ${getSentimentColor(cluster.sentiment)}`}>
                        {cluster.sentiment}%
                      </p>
                    </div>
                    <div>
                      <span className="text-muted-foreground">–û–±—ä–µ–º:</span>
                      <p className="font-medium">{cluster.volume} –æ—Ç–∑—ã–≤–æ–≤</p>
                    </div>
                    <div>
                      <span className="text-muted-foreground">–†–æ—Å—Ç:</span>
                      <p className={`font-medium ${cluster.growth > 0 ? 'text-sentiment-negative' : 'text-sentiment-positive'}`}>
                        {cluster.growth > 0 ? '+' : ''}{cluster.growth}%
                      </p>
                    </div>
                    <div>
                      <span className="text-muted-foreground">Confidence:</span>
                      <div className="flex items-center gap-2">
                        <Progress value={cluster.confidence} className="flex-1 h-2" />
                        <span className="text-xs font-medium">{cluster.confidence}%</span>
                      </div>
                    </div>
                  </div>

                  <div className="mb-3">
                    <span className="text-sm text-muted-foreground mb-1 block">–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</span>
                    <div className="flex flex-wrap gap-1">
                      {cluster.keywords.map((keyword) => (
                        <Badge key={keyword} variant="outline" className="text-xs">
                          {keyword}
                        </Badge>
                      ))}
                    </div>
                  </div>

                  <div>
                    <span className="text-sm text-muted-foreground mb-2 block">–ü—Ä–∏–º–µ—Ä—ã –æ—Ç–∑—ã–≤–æ–≤:</span>
                    <div className="space-y-1">
                      {cluster.examples.slice(0, 2).map((example, index) => (
                        <blockquote key={index} className="text-xs italic text-muted-foreground pl-3 border-l-2 border-muted">
                          "{example}"
                        </blockquote>
                      ))}
                    </div>
                  </div>
                </div>

                <div className="ml-4 flex flex-col gap-2">
                  {cluster.actionable && (
                    <Button variant="default" size="sm" className="text-xs">
                      <AlertTriangle className="w-3 h-3 mr-1" />
                      –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É
                    </Button>
                  )}
                  <Button variant="outline" size="sm" className="text-xs">
                    <ArrowRight className="w-3 h-3 mr-1" />
                    –î–µ—Ç–∞–ª–∏
                  </Button>
                </div>
              </div>
            </div>
          ))}
        </div>

        <div className="mt-6 p-4 bg-muted/30 rounded-lg">
          <div className="flex items-center gap-2 mb-2">
            <Brain className="w-4 h-4 text-primary" />
            <span className="text-sm font-medium">ML Model Info</span>
          </div>
          <div className="text-xs text-muted-foreground space-y-1">
            <p>‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º: BERT + LDA —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ</p>
            <p>‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±—É—á–µ–Ω–∏–µ: 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥ –Ω–∞ 15,847 –æ—Ç–∑—ã–≤–∞—Ö</p>
            <p>‚Ä¢ Accuracy: 87.3% ‚Ä¢ Precision: 92.1% ‚Ä¢ Recall: 84.6%</p>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}